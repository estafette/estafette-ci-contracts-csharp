// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: manifest.v1/estafette_trigger.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Estafette.CI.Manifest.V1 {

  /// <summary>Holder for reflection information generated from manifest.v1/estafette_trigger.proto</summary>
  public static partial class EstafetteTriggerReflection {

    #region Descriptor
    /// <summary>File descriptor for manifest.v1/estafette_trigger.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EstafetteTriggerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNtYW5pZmVzdC52MS9lc3RhZmV0dGVfdHJpZ2dlci5wcm90bxILbWFuaWZl",
            "c3QudjEaKG1hbmlmZXN0LnYxL2VzdGFmZXR0ZV9jcm9uX3RyaWdnZXIucHJv",
            "dG8aKm1hbmlmZXN0LnYxL2VzdGFmZXR0ZV9kb2NrZXJfdHJpZ2dlci5wcm90",
            "bxonbWFuaWZlc3QudjEvZXN0YWZldHRlX2dpdF90cmlnZ2VyLnByb3RvGixt",
            "YW5pZmVzdC52MS9lc3RhZmV0dGVfcGlwZWxpbmVfdHJpZ2dlci5wcm90bxor",
            "bWFuaWZlc3QudjEvZXN0YWZldHRlX3B1Yl9zdWJfdHJpZ2dlci5wcm90bxor",
            "bWFuaWZlc3QudjEvZXN0YWZldHRlX3JlbGVhc2VfdHJpZ2dlci5wcm90bxow",
            "bWFuaWZlc3QudjEvZXN0YWZldHRlX3RyaWdnZXJfYnVpbGRfYWN0aW9uLnBy",
            "b3RvGjJtYW5pZmVzdC52MS9lc3RhZmV0dGVfdHJpZ2dlcl9yZWxlYXNlX2Fj",
            "dGlvbi5wcm90byLRAwoQRXN0YWZldHRlVHJpZ2dlchI3CghwaXBlbGluZRgB",
            "IAEoCzIlLm1hbmlmZXN0LnYxLkVzdGFmZXR0ZVBpcGVsaW5lVHJpZ2dlchI1",
            "CgdyZWxlYXNlGAIgASgLMiQubWFuaWZlc3QudjEuRXN0YWZldHRlUmVsZWFz",
            "ZVRyaWdnZXISLQoDZ2l0GAMgASgLMiAubWFuaWZlc3QudjEuRXN0YWZldHRl",
            "R2l0VHJpZ2dlchIzCgZkb2NrZXIYBCABKAsyIy5tYW5pZmVzdC52MS5Fc3Rh",
            "ZmV0dGVEb2NrZXJUcmlnZ2VyEi8KBGNyb24YBSABKAsyIS5tYW5pZmVzdC52",
            "MS5Fc3RhZmV0dGVDcm9uVHJpZ2dlchI0CgdwdWJfc3ViGAYgASgLMiMubWFu",
            "aWZlc3QudjEuRXN0YWZldHRlUHViU3ViVHJpZ2dlchI+CgxidWlsZF9hY3Rp",
            "b24YByABKAsyKC5tYW5pZmVzdC52MS5Fc3RhZmV0dGVUcmlnZ2VyQnVpbGRB",
            "Y3Rpb24SQgoOcmVsZWFzZV9hY3Rpb24YCCABKAsyKi5tYW5pZmVzdC52MS5F",
            "c3RhZmV0dGVUcmlnZ2VyUmVsZWFzZUFjdGlvbkJ4Chtpby5lc3RhZmV0dGUu",
            "Y2kubWFuaWZlc3QudjFaPmdpdGh1Yi5jb20vZXN0YWZldHRlL2VzdGFmZXR0",
            "ZS1jaS1jb250cmFjdHMtZ29sYW5nL21hbmlmZXN0X3YxqgIYRXN0YWZldHRl",
            "LkNJLk1hbmlmZXN0LlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Estafette.CI.Manifest.V1.EstafetteCronTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafetteDockerTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafetteGitTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafettePipelineTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafettePubSubTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafetteReleaseTriggerReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafetteTriggerBuildActionReflection.Descriptor, global::Estafette.CI.Manifest.V1.EstafetteTriggerReleaseActionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Estafette.CI.Manifest.V1.EstafetteTrigger), global::Estafette.CI.Manifest.V1.EstafetteTrigger.Parser, new[]{ "Pipeline", "Release", "Git", "Docker", "Cron", "PubSub", "BuildAction", "ReleaseAction" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EstafetteTrigger : pb::IMessage<EstafetteTrigger> {
    private static readonly pb::MessageParser<EstafetteTrigger> _parser = new pb::MessageParser<EstafetteTrigger>(() => new EstafetteTrigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstafetteTrigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Estafette.CI.Manifest.V1.EstafetteTriggerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstafetteTrigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstafetteTrigger(EstafetteTrigger other) : this() {
      pipeline_ = other.pipeline_ != null ? other.pipeline_.Clone() : null;
      release_ = other.release_ != null ? other.release_.Clone() : null;
      git_ = other.git_ != null ? other.git_.Clone() : null;
      docker_ = other.docker_ != null ? other.docker_.Clone() : null;
      cron_ = other.cron_ != null ? other.cron_.Clone() : null;
      pubSub_ = other.pubSub_ != null ? other.pubSub_.Clone() : null;
      buildAction_ = other.buildAction_ != null ? other.buildAction_.Clone() : null;
      releaseAction_ = other.releaseAction_ != null ? other.releaseAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstafetteTrigger Clone() {
      return new EstafetteTrigger(this);
    }

    /// <summary>Field number for the "pipeline" field.</summary>
    public const int PipelineFieldNumber = 1;
    private global::Estafette.CI.Manifest.V1.EstafettePipelineTrigger pipeline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafettePipelineTrigger Pipeline {
      get { return pipeline_; }
      set {
        pipeline_ = value;
      }
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 2;
    private global::Estafette.CI.Manifest.V1.EstafetteReleaseTrigger release_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteReleaseTrigger Release {
      get { return release_; }
      set {
        release_ = value;
      }
    }

    /// <summary>Field number for the "git" field.</summary>
    public const int GitFieldNumber = 3;
    private global::Estafette.CI.Manifest.V1.EstafetteGitTrigger git_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteGitTrigger Git {
      get { return git_; }
      set {
        git_ = value;
      }
    }

    /// <summary>Field number for the "docker" field.</summary>
    public const int DockerFieldNumber = 4;
    private global::Estafette.CI.Manifest.V1.EstafetteDockerTrigger docker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteDockerTrigger Docker {
      get { return docker_; }
      set {
        docker_ = value;
      }
    }

    /// <summary>Field number for the "cron" field.</summary>
    public const int CronFieldNumber = 5;
    private global::Estafette.CI.Manifest.V1.EstafetteCronTrigger cron_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteCronTrigger Cron {
      get { return cron_; }
      set {
        cron_ = value;
      }
    }

    /// <summary>Field number for the "pub_sub" field.</summary>
    public const int PubSubFieldNumber = 6;
    private global::Estafette.CI.Manifest.V1.EstafettePubSubTrigger pubSub_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafettePubSubTrigger PubSub {
      get { return pubSub_; }
      set {
        pubSub_ = value;
      }
    }

    /// <summary>Field number for the "build_action" field.</summary>
    public const int BuildActionFieldNumber = 7;
    private global::Estafette.CI.Manifest.V1.EstafetteTriggerBuildAction buildAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteTriggerBuildAction BuildAction {
      get { return buildAction_; }
      set {
        buildAction_ = value;
      }
    }

    /// <summary>Field number for the "release_action" field.</summary>
    public const int ReleaseActionFieldNumber = 8;
    private global::Estafette.CI.Manifest.V1.EstafetteTriggerReleaseAction releaseAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Estafette.CI.Manifest.V1.EstafetteTriggerReleaseAction ReleaseAction {
      get { return releaseAction_; }
      set {
        releaseAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstafetteTrigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstafetteTrigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pipeline, other.Pipeline)) return false;
      if (!object.Equals(Release, other.Release)) return false;
      if (!object.Equals(Git, other.Git)) return false;
      if (!object.Equals(Docker, other.Docker)) return false;
      if (!object.Equals(Cron, other.Cron)) return false;
      if (!object.Equals(PubSub, other.PubSub)) return false;
      if (!object.Equals(BuildAction, other.BuildAction)) return false;
      if (!object.Equals(ReleaseAction, other.ReleaseAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pipeline_ != null) hash ^= Pipeline.GetHashCode();
      if (release_ != null) hash ^= Release.GetHashCode();
      if (git_ != null) hash ^= Git.GetHashCode();
      if (docker_ != null) hash ^= Docker.GetHashCode();
      if (cron_ != null) hash ^= Cron.GetHashCode();
      if (pubSub_ != null) hash ^= PubSub.GetHashCode();
      if (buildAction_ != null) hash ^= BuildAction.GetHashCode();
      if (releaseAction_ != null) hash ^= ReleaseAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pipeline_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pipeline);
      }
      if (release_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Release);
      }
      if (git_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Git);
      }
      if (docker_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Docker);
      }
      if (cron_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Cron);
      }
      if (pubSub_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PubSub);
      }
      if (buildAction_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BuildAction);
      }
      if (releaseAction_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ReleaseAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pipeline_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pipeline);
      }
      if (release_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Release);
      }
      if (git_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Git);
      }
      if (docker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docker);
      }
      if (cron_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cron);
      }
      if (pubSub_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PubSub);
      }
      if (buildAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildAction);
      }
      if (releaseAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstafetteTrigger other) {
      if (other == null) {
        return;
      }
      if (other.pipeline_ != null) {
        if (pipeline_ == null) {
          pipeline_ = new global::Estafette.CI.Manifest.V1.EstafettePipelineTrigger();
        }
        Pipeline.MergeFrom(other.Pipeline);
      }
      if (other.release_ != null) {
        if (release_ == null) {
          release_ = new global::Estafette.CI.Manifest.V1.EstafetteReleaseTrigger();
        }
        Release.MergeFrom(other.Release);
      }
      if (other.git_ != null) {
        if (git_ == null) {
          git_ = new global::Estafette.CI.Manifest.V1.EstafetteGitTrigger();
        }
        Git.MergeFrom(other.Git);
      }
      if (other.docker_ != null) {
        if (docker_ == null) {
          docker_ = new global::Estafette.CI.Manifest.V1.EstafetteDockerTrigger();
        }
        Docker.MergeFrom(other.Docker);
      }
      if (other.cron_ != null) {
        if (cron_ == null) {
          cron_ = new global::Estafette.CI.Manifest.V1.EstafetteCronTrigger();
        }
        Cron.MergeFrom(other.Cron);
      }
      if (other.pubSub_ != null) {
        if (pubSub_ == null) {
          pubSub_ = new global::Estafette.CI.Manifest.V1.EstafettePubSubTrigger();
        }
        PubSub.MergeFrom(other.PubSub);
      }
      if (other.buildAction_ != null) {
        if (buildAction_ == null) {
          buildAction_ = new global::Estafette.CI.Manifest.V1.EstafetteTriggerBuildAction();
        }
        BuildAction.MergeFrom(other.BuildAction);
      }
      if (other.releaseAction_ != null) {
        if (releaseAction_ == null) {
          releaseAction_ = new global::Estafette.CI.Manifest.V1.EstafetteTriggerReleaseAction();
        }
        ReleaseAction.MergeFrom(other.ReleaseAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pipeline_ == null) {
              pipeline_ = new global::Estafette.CI.Manifest.V1.EstafettePipelineTrigger();
            }
            input.ReadMessage(pipeline_);
            break;
          }
          case 18: {
            if (release_ == null) {
              release_ = new global::Estafette.CI.Manifest.V1.EstafetteReleaseTrigger();
            }
            input.ReadMessage(release_);
            break;
          }
          case 26: {
            if (git_ == null) {
              git_ = new global::Estafette.CI.Manifest.V1.EstafetteGitTrigger();
            }
            input.ReadMessage(git_);
            break;
          }
          case 34: {
            if (docker_ == null) {
              docker_ = new global::Estafette.CI.Manifest.V1.EstafetteDockerTrigger();
            }
            input.ReadMessage(docker_);
            break;
          }
          case 42: {
            if (cron_ == null) {
              cron_ = new global::Estafette.CI.Manifest.V1.EstafetteCronTrigger();
            }
            input.ReadMessage(cron_);
            break;
          }
          case 50: {
            if (pubSub_ == null) {
              pubSub_ = new global::Estafette.CI.Manifest.V1.EstafettePubSubTrigger();
            }
            input.ReadMessage(pubSub_);
            break;
          }
          case 58: {
            if (buildAction_ == null) {
              buildAction_ = new global::Estafette.CI.Manifest.V1.EstafetteTriggerBuildAction();
            }
            input.ReadMessage(buildAction_);
            break;
          }
          case 66: {
            if (releaseAction_ == null) {
              releaseAction_ = new global::Estafette.CI.Manifest.V1.EstafetteTriggerReleaseAction();
            }
            input.ReadMessage(releaseAction_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
