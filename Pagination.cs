// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: contracts.v1/pagination.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Estafette.CI.Contracts.V1 {

  /// <summary>Holder for reflection information generated from contracts.v1/pagination.proto</summary>
  public static partial class PaginationReflection {

    #region Descriptor
    /// <summary>File descriptor for contracts.v1/pagination.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaginationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1jb250cmFjdHMudjEvcGFnaW5hdGlvbi5wcm90bxIMY29udHJhY3RzLnYx",
            "IlIKClBhZ2luYXRpb24SDAoEcGFnZRgBIAEoAxIMCgRzaXplGAIgASgDEhMK",
            "C3RvdGFsX3BhZ2VzGAMgASgDEhMKC3RvdGFsX2l0ZW1zGAQgASgDQl1aP2dp",
            "dGh1Yi5jb20vZXN0YWZldHRlL2VzdGFmZXR0ZS1jaS1jb250cmFjdHMtZ29s",
            "YW5nL2NvbnRyYWN0c192MaoCGUVzdGFmZXR0ZS5DSS5Db250cmFjdHMuVjFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Estafette.CI.Contracts.V1.Pagination), global::Estafette.CI.Contracts.V1.Pagination.Parser, new[]{ "Page", "Size", "TotalPages", "TotalItems" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Pagination : pb::IMessage<Pagination> {
    private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Estafette.CI.Contracts.V1.PaginationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination(Pagination other) : this() {
      page_ = other.page_;
      size_ = other.size_;
      totalPages_ = other.totalPages_;
      totalItems_ = other.totalItems_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination Clone() {
      return new Pagination(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private long page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "total_pages" field.</summary>
    public const int TotalPagesFieldNumber = 3;
    private long totalPages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalPages {
      get { return totalPages_; }
      set {
        totalPages_ = value;
      }
    }

    /// <summary>Field number for the "total_items" field.</summary>
    public const int TotalItemsFieldNumber = 4;
    private long totalItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalItems {
      get { return totalItems_; }
      set {
        totalItems_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pagination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pagination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (Size != other.Size) return false;
      if (TotalPages != other.TotalPages) return false;
      if (TotalItems != other.TotalItems) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0L) hash ^= Page.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (TotalPages != 0L) hash ^= TotalPages.GetHashCode();
      if (TotalItems != 0L) hash ^= TotalItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Page);
      }
      if (Size != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (TotalPages != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalPages);
      }
      if (TotalItems != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Page);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (TotalPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalPages);
      }
      if (TotalItems != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalItems);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pagination other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0L) {
        Page = other.Page;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.TotalPages != 0L) {
        TotalPages = other.TotalPages;
      }
      if (other.TotalItems != 0L) {
        TotalItems = other.TotalItems;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt64();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
          case 24: {
            TotalPages = input.ReadInt64();
            break;
          }
          case 32: {
            TotalItems = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
